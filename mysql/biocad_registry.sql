-- MySQL Script generated by MySQL Workbench
-- Sun Jun 11 00:32:25 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema cad_registry
-- -----------------------------------------------------
-- necessary components for build cellular network model
DROP SCHEMA IF EXISTS `cad_registry` ;

-- -----------------------------------------------------
-- Schema cad_registry
--
-- necessary components for build cellular network model
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cad_registry` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
SHOW WARNINGS;
USE `cad_registry` ;

-- -----------------------------------------------------
-- Table `complex`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `complex` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `complex` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `molecule_id` INT UNSIGNED NOT NULL COMMENT 'the molecules id of current complex entity',
  `component_id` INT UNSIGNED NOT NULL COMMENT 'One part of the component of current complex, the molecules id',
  `n_components` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'the number of the component parts of current complex',
  `name` VARCHAR(2048) NOT NULL COMMENT 'the name of current complex',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `complex` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `unique_component` ON `complex` (`molecule_id` ASC, `component_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `dblinks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dblinks` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `dblinks` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `db_src` INT UNSIGNED NOT NULL COMMENT 'the external database',
  `xref_id` VARCHAR(255) NOT NULL COMMENT 'the external database id of current entity',
  `entity_id` INT UNSIGNED NOT NULL COMMENT 'the biocad internal registry id of the entity object reference to',
  `entity_type` INT UNSIGNED NOT NULL COMMENT 'the data type of the current entity object\n\n1: molecules\n2: reactions\n3: gene ontology term\n4: compartment term',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `dblinks` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_unique2` ON `dblinks` (`xref_id` ASC, `db_src` ASC, `entity_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `family`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `family` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `family` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `parent_id` INT UNSIGNED NOT NULL,
  `n_childs` INT UNSIGNED NOT NULL DEFAULT 0,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `description` VARCHAR(8192) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `family` (`id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `gene_ontology`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gene_ontology` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `gene_ontology` (
  `id` INT UNSIGNED NOT NULL COMMENT 'The go term id',
  `name` VARCHAR(255) NOT NULL,
  `namespace` TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'enum value from https://github.com/SMRUCC/GCModeller/blob/5f709e21e88d4b10ca9ef3f2c2c83585405caa2b/src/GCModeller/data/GO_gene-ontology/GeneOntology/Ontologies.vb#L74\n\n1: cellular_component\n2: biological_process\n3: molecular_function',
  `def` VARCHAR(8192) NOT NULL,
  `is_obsolete` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `gene_ontology` (`id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `genomes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genomes` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `genomes` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `taxonomic_group` INT UNSIGNED NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `ncbi_taxid` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'default 0 means unknown genome ( has not been assigned in ncbi taxonomy database?)',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'A subset of the ncbi taxonomy tree';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `genomes` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `name_UNIQUE` ON `genomes` (`name` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `go_dag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `go_dag` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `go_dag` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `term_id` INT UNSIGNED NOT NULL COMMENT 'current go term id',
  `go_term` INT UNSIGNED NOT NULL COMMENT 'another go term id',
  `relationship` INT UNSIGNED NOT NULL COMMENT '1: is_a, example as term_id is_a go_term',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `go_dag` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `unique_edge` ON `go_dag` (`term_id` ASC, `go_term` ASC, `relationship` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `model_graph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `model_graph` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `model_graph` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `pathway_id` INT UNSIGNED NOT NULL,
  `reaction_id` INT UNSIGNED NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `model_graph` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `unique_index` ON `model_graph` (`pathway_id` ASC, `reaction_id` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE INDEX `pathway_index` ON `model_graph` (`pathway_id` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE INDEX `reaction_index` ON `model_graph` (`reaction_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `molecules`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `molecules` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `molecules` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `molecule_id` VARCHAR(64) NOT NULL,
  `type` INT NOT NULL DEFAULT 1 COMMENT '1: gene(dna), rna, polypeptide(protein)\n2: metabolite\n3: protein-complex\n\n',
  `name` VARCHAR(64) NOT NULL,
  `seq_num` INT NOT NULL DEFAULT 0,
  `synonym_num` INT UNSIGNED NOT NULL DEFAULT 0,
  `ncbi_taxid` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'the genome source of current molecule',
  `category_id` INT UNSIGNED NOT NULL DEFAULT 0,
  `description` VARCHAR(8192) NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `molecules` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `gene_id_index` ON `molecules` (`molecule_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `motif`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `motif` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `motif` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `family` VARCHAR(45) NOT NULL COMMENT 'the motif family name',
  `family_id` INT UNSIGNED NOT NULL,
  `type` VARCHAR(3) NOT NULL DEFAULT 'TF' COMMENT 'RNA/TF',
  `width` INT UNSIGNED NOT NULL COMMENT 'the motif PWM width',
  `variant` VARCHAR(4096) NOT NULL COMMENT 'family may contains multiple version of the PWM variant matrix data, this data field is the sequence string representative of the PWM matrix object',
  `checmsum` VARCHAR(32) NULL COMMENT 'check sum of the pwm binary pack data',
  `pwm` VARCHAR(8192) NOT NULL COMMENT 'pwm data bson encoded in gzip compression base64 string',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` VARCHAR(4096) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'organism non-specific data';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `motif` (`id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `motif_sites`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `motif_sites` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `motif_sites` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(3) NOT NULL DEFAULT 'TF' COMMENT 'RNA/TF',
  `gene_id` VARCHAR(45) NULL,
  `gene_name` VARCHAR(45) NULL,
  `loci` INT NOT NULL DEFAULT 0 COMMENT 'the upstream location of the motif site, value could be negative',
  `score` DOUBLE NOT NULL DEFAULT 0.0,
  `regulator` INT UNSIGNED NOT NULL,
  `genome_id` INT UNSIGNED NOT NULL,
  `motif_id` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'link to the organism non-specific motif PWM model data',
  `len` INT UNSIGNED NOT NULL DEFAULT 0,
  `hashcode` VARCHAR(32) NOT NULL,
  `family` VARCHAR(45) NULL,
  `seq` VARCHAR(8192) NOT NULL COMMENT 'the motif site sequence',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'motif site sequence and genomics context (organism specific data)';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `motif_sites` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `family_key` ON `motif_sites` (`family` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ncbi_taxonomy_tree`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ncbi_taxonomy_tree` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ncbi_taxonomy_tree` (
  `id` INT UNSIGNED NOT NULL COMMENT 'The ncbi taxonomy id',
  `name` VARCHAR(1024) NOT NULL,
  `parent` INT UNSIGNED NOT NULL,
  `rank` INT UNSIGNED NOT NULL COMMENT 'the vocabulary term id in the biocad registry',
  `n_childs` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `ncbi_taxonomy_tree` (`id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `operon_graph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `operon_graph` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `operon_graph` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `operon_id` INT UNSIGNED NOT NULL,
  `gene_id` INT UNSIGNED NOT NULL,
  `genome_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `operon_graph` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `unique_key` ON `operon_graph` (`gene_id` ASC, `operon_id` ASC, `genome_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `operon_group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `operon_group` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `operon_group` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `operon` VARCHAR(255) NOT NULL COMMENT 'the operon name',
  `genome_id` INT UNSIGNED NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `operon_group` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `operon_unique_key` ON `operon_group` (`operon` ASC, `genome_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `pathway`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pathway` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `pathway` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(1024) NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `source` INT UNSIGNED NOT NULL COMMENT 'the vocabulary id of the database source name',
  `note` MEDIUMTEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'define the biological pathway data';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `pathway` (`id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `reaction_graph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reaction_graph` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `reaction_graph` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `reaction_id` INT UNSIGNED NOT NULL,
  `molecule_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(255) NOT NULL COMMENT 'the name text of the molecule',
  `stoichiometric` FLOAT NOT NULL DEFAULT 1,
  `type` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '1 - left, substrate; 2 - right, product; 3 - middle, enzyme',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `reaction_graph` (`id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `reaction_node`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reaction_node` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `reaction_node` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `n_left` INT NOT NULL DEFAULT 0,
  `n_right` INT NOT NULL DEFAULT 0,
  `n_regulator` INT NULL DEFAULT 0 COMMENT 'count for enzyme or something of which associated with this reaction link',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'define the biochemical reaction data';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `reaction_node` (`id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `regulator`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `regulator` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `regulator` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `gene_id` VARCHAR(64) NOT NULL,
  `type` VARCHAR(3) NOT NULL COMMENT 'TF/RNA',
  `mol_id` INT UNSIGNED NOT NULL,
  `family_id` INT UNSIGNED NOT NULL,
  `family` VARCHAR(45) NOT NULL,
  `genome_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `regulator` (`id` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `uniuqe_regulator` ON `regulator` (`genome_id` ASC, `family_id` ASC, `mol_id` ASC, `gene_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `family_key` ON `regulator` (`family` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `seq_archive`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `seq_archive` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `seq_archive` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `seq_id` VARCHAR(64) NOT NULL,
  `mol_id` INT UNSIGNED NOT NULL,
  `mol_type` INT NOT NULL COMMENT '1: dna\n2: rna\n3: protein\n\nhttps://github.com/SMRUCC/GCModeller/blob/918cb50e86f2159856edaa0531cec227fc7f6e97/src/GCModeller/core/Bio.Assembly/SequenceModel/Abstract.vb#L70',
  `len` INT UNSIGNED NOT NULL DEFAULT 0,
  `hashcode` CHAR(32) NOT NULL COMMENT 'md5 hashcode of the sequence string',
  `seq` LONGTEXT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `seq_archive` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `gene_id` ON `seq_archive` (`seq_id` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE INDEX `seq_len` ON `seq_archive` (`len` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE INDEX `types` ON `seq_archive` (`mol_type` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `seq_unique` ON `seq_archive` (`mol_id` ASC, `mol_type` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `seq_graph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `seq_graph` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `seq_graph` (
  `id` INT UNSIGNED NOT NULL COMMENT 'the id of the seq_archive, so this id is not an auto-increment index',
  `title` VARCHAR(4096) NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `hashcode` VARCHAR(32) NOT NULL COMMENT 'md5 of the graph_base64 string',
  `graph_base64` LONGTEXT NOT NULL COMMENT 'base64 encoded string based on the zlib compresion of seq graph values',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `seq_graph` (`id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `subcellular_compartments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subcellular_compartments` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `subcellular_compartments` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(2048) NOT NULL,
  `add_time` DATETIME NULL DEFAULT now(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `subcellular_compartments` (`id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `subcellular_locations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subcellular_locations` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `subcellular_locations` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `biological_process` INT UNSIGNED NOT NULL,
  `compartment` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `subcellular_locations` (`id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `synonym`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `synonym` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `synonym` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `term_id` INT UNSIGNED NOT NULL COMMENT 'A internal reference id to the biocad object',
  `synonym` VARCHAR(255) NOT NULL,
  `type` INT UNSIGNED NOT NULL COMMENT 'the data type of current term object, could be:\n\n1. molecules object\n2. gene ontology term',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `synonym` (`id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `taxonomic`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taxonomic` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `taxonomic` (
  `id` INT UNSIGNED NOT NULL COMMENT 'assign external tax id, so this id index field is not auto-incremental',
  `name` VARCHAR(255) NOT NULL,
  `n_tax` INT UNSIGNED NOT NULL DEFAULT 0,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` VARCHAR(4096) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Taxonomic group';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `taxonomic` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `name_UNIQUE` ON `taxonomic` (`name` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `name_index` ON `taxonomic` (`name` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE INDEX `time_index` ON `taxonomic` (`add_time` ASC) INVISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `vocabulary`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vocabulary` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `vocabulary` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `term` VARCHAR(255) NOT NULL,
  `hashcode` VARCHAR(32) NOT NULL DEFAULT 'NA',
  `parent_id` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'the id of current vocabulary term that could be classify to, the id of another vocabulary term',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `description` VARCHAR(8192) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `vocabulary` (`id` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE INDEX `find_term` ON `vocabulary` (`term` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `term_UNIQUE` ON `vocabulary` (`term` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `find_term2` ON `vocabulary` (`hashcode` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE INDEX `select_category` ON `vocabulary` (`parent_id` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE INDEX `term_unique3` ON `vocabulary` (`term` ASC, `hashcode` ASC, `parent_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `parent_id_index` ON `vocabulary` (`parent_id` ASC) VISIBLE;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
