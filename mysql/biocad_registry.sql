-- MySQL Script generated by MySQL Workbench
-- Sun Aug 25 18:13:48 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema cad_registry
-- -----------------------------------------------------
-- necessary components for build cellular network model
DROP SCHEMA IF EXISTS `cad_registry` ;

-- -----------------------------------------------------
-- Schema cad_registry
--
-- necessary components for build cellular network model
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cad_registry` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
SHOW WARNINGS;
USE `cad_registry` ;

-- -----------------------------------------------------
-- Table `complex`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `complex` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `complex` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `molecule_id` INT UNSIGNED NOT NULL COMMENT 'the complex molecule id',
  `component_id` INT UNSIGNED NOT NULL COMMENT 'the component molecule id',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` LONGTEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'the complex component composition graph data';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `complex` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `molecule_info_idx` ON `complex` (`molecule_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `component_info_idx` ON `complex` (`component_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `db_xrefs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_xrefs` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `db_xrefs` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `obj_id` INT UNSIGNED NOT NULL,
  `db_key` INT UNSIGNED NOT NULL,
  `xref` VARCHAR(255) NOT NULL,
  `type` INT UNSIGNED NOT NULL COMMENT 'the target type of obj_id that point to, could be molecules, reactions, pathways',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `db_xrefs` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `molecule_id_idx` ON `db_xrefs` (`obj_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `db_name_idx` ON `db_xrefs` (`db_key` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `object_type_idx` ON `db_xrefs` (`type` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `unique_dblink` ON `db_xrefs` (`obj_id` ASC, `db_key` ASC, `xref` ASC, `type` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `find_xrefs` ON `db_xrefs` (`type` ASC, `xref` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `dbid_index` ON `db_xrefs` (`xref` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kinetic_law`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kinetic_law` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kinetic_law` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `db_xref` VARCHAR(64) NOT NULL COMMENT 'the external reference id of current kinetics lambda model',
  `lambda` VARCHAR(1024) NOT NULL COMMENT 'the lambda expression of the kinetics',
  `params` VARCHAR(1024) NOT NULL COMMENT 'parameter set of the current kinetics lambda epxression',
  `temperature` DOUBLE NOT NULL DEFAULT 37 COMMENT 'temperature of the enzyme catalytic kinetics',
  `pH` DOUBLE UNSIGNED NOT NULL DEFAULT 7.5 COMMENT 'pH of the enzyme catalytic kinetics',
  `uniprot` VARCHAR(45) NOT NULL COMMENT 'the uniprot id of the current enzyme model',
  `function_id` INT UNSIGNED NOT NULL COMMENT 'the internal reference id of the molecule function record',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` LONGTEXT NULL COMMENT 'description note text about current enzyme kinetics lambda model',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'the enzymatic catalytic kinetics lambda model';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `kinetic_law` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `regulation_id_idx` ON `kinetic_law` (`function_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `molecule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `molecule` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `molecule` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `xref_id` VARCHAR(32) NOT NULL COMMENT 'the source external reference id of current molecule, for a gene should be a locus_tag, and protein should be a main uniprot accession id and for metabolite should be pubchem cid or chebi id',
  `name` VARCHAR(512) NOT NULL COMMENT 'the name of the molecule',
  `mass` DOUBLE NOT NULL COMMENT 'the molecular exact mass',
  `type` INT UNSIGNED NOT NULL COMMENT 'the molecule type, the id of the vocabulary term, value could be nucl(DNA), RNA, prot, metabolite, complex',
  `formula` VARCHAR(128) NOT NULL COMMENT 'metabolite formula or nucl/prot sequence',
  `parent` INT UNSIGNED NOT NULL COMMENT 'the parent metabolite id, example as RNA is a parent of polypeptide, and gene is a parent of RNA sequence.',
  `add_time` DATETIME NOT NULL DEFAULT now() COMMENT 'add time of current molecular entity',
  `note` LONGTEXT NULL COMMENT 'description text about current entity object',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'The molecular entity object inside a cell';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `molecule` (`id` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE INDEX `data_type_idx` ON `molecule` (`type` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `parent_molecule_idx` ON `molecule` (`parent` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `unique_molecule` ON `molecule` (`type` ASC, `xref_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `name_index` ON `molecule` (`name` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `xref_index` ON `molecule` (`xref_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `mass_filter` ON `molecule` (`mass` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `molecule_function`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `molecule_function` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `molecule_function` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `molecule_id` INT UNSIGNED NOT NULL COMMENT 'the molecule id, usually be the protein molecule id',
  `regulation_term` INT UNSIGNED NOT NULL COMMENT 'the id of the term in regulation graph table',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` LONGTEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `molecule_function` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `molecule_entity_idx` ON `molecule_function` (`molecule_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `regulation_info_idx` ON `molecule_function` (`regulation_term` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `pathway`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pathway` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `pathway` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `xref_id` VARCHAR(45) NULL COMMENT 'the external reference id of the pathway',
  `name` VARCHAR(1024) NOT NULL COMMENT 'the pathway name',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` LONGTEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `pathway` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `name_UNIQUE` ON `pathway` (`name` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `pathway_graph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pathway_graph` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `pathway_graph` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `pathway_id` INT UNSIGNED NOT NULL,
  `entity_id` INT UNSIGNED NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` LONGTEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `pathway_graph` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `pathway_info_idx` ON `pathway_graph` (`pathway_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `molecule_data_idx` ON `pathway_graph` (`entity_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `reaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reaction` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `reaction` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `db_xref` VARCHAR(64) NOT NULL,
  `name` VARCHAR(1024) NOT NULL,
  `equation` MEDIUMTEXT NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` LONGTEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'the definition of the biological reaction process';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `reaction` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `db_xref_UNIQUE` ON `reaction` (`db_xref` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `reaction_graph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reaction_graph` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `reaction_graph` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `reaction` INT UNSIGNED NOT NULL COMMENT 'the id of the reaction',
  `molecule_id` INT UNSIGNED NOT NULL COMMENT 'the id of the molecule entity',
  `db_xref` VARCHAR(255) NOT NULL COMMENT 'the reaction source definition of the molecule to reference the molecule entity inside biocad registry, used for link the molecule entity with current relationship record ',
  `role` INT UNSIGNED NOT NULL COMMENT 'the vocabulary term of the molecule role inside this reaction model, usually be the substrate or product',
  `factor` DOUBLE NOT NULL DEFAULT 1,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` LONGTEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'the relationship between the reaction model and molecule objects';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `reaction_graph` (`id` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE INDEX `reaction_info_idx` ON `reaction_graph` (`reaction` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `molecule_data_idx` ON `reaction_graph` (`molecule_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `role_term_idx` ON `reaction_graph` (`role` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `check_duplicated` ON `reaction_graph` (`reaction` ASC, `db_xref` ASC, `role` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `regulation_graph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `regulation_graph` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `regulation_graph` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `term` VARCHAR(64) NOT NULL COMMENT 'usually be the EC number',
  `role` INT UNSIGNED NOT NULL,
  `reaction_id` INT UNSIGNED NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` LONGTEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `regulation_graph` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `role_term_idx` ON `regulation_graph` (`role` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `reaction_process_idx` ON `regulation_graph` (`reaction_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sequence_graph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sequence_graph` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sequence_graph` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `molecule_id` INT UNSIGNED NOT NULL COMMENT 'the molecule reference id inside biocad registry system',
  `sequence` LONGTEXT NOT NULL COMMENT 'the sequence data, for metabolite should be the SMILES structure string data',
  `hashcode` CHAR(32) NOT NULL COMMENT 'md5 hashcode of the sequence data string',
  `seq_graph` LONGTEXT NOT NULL COMMENT 'base64 encoded double vector of the embedding result',
  `embedding` LONGTEXT NOT NULL COMMENT 'the embedding keys, for dna, always ATGC, for RNA always AUGC, for popypeptide always 20 Amino acid, for small metabolite, is the atom groups that parsed from the smiles graph ',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'the sequence composition data';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `sequence_graph` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `molecules_idx` ON `sequence_graph` (`molecule_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `search_sequence` ON `sequence_graph` (`hashcode` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `subcellular_compartments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subcellular_compartments` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `subcellular_compartments` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `compartment_name` VARCHAR(1024) NOT NULL,
  `topology` VARCHAR(1024) NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` LONGTEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'defines the subcellular compartments';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `subcellular_compartments` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `compartment_name_UNIQUE` ON `subcellular_compartments` (`compartment_name` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `subcellular_location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subcellular_location` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `subcellular_location` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `compartment_id` INT UNSIGNED NOT NULL,
  `obj_id` INT UNSIGNED NOT NULL,
  `entity` INT UNSIGNED NOT NULL COMMENT 'the vocabulary type id of the entity object, could be molecule, reaction or pathways',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` LONGTEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'associates the subcellular_compartments and the molecule objects';

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `subcellular_location` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `subcellular_compartments_idx` ON `subcellular_location` (`compartment_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `molecule_obj_idx` ON `subcellular_location` (`obj_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `unique_reference` ON `subcellular_location` (`compartment_id` ASC, `obj_id` ASC, `entity` ASC) INVISIBLE;

SHOW WARNINGS;
CREATE INDEX `link_entity_type_idx` ON `subcellular_location` (`entity` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `vocabulary`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vocabulary` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `vocabulary` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `category` VARCHAR(32) NOT NULL,
  `term` VARCHAR(255) NOT NULL,
  `color` VARCHAR(8) NOT NULL DEFAULT '#000000' COMMENT 'the html color code, example as #ffffff',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` LONGTEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `vocabulary` (`id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `search_term` ON `vocabulary` (`category` ASC, `term` ASC) VISIBLE;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
